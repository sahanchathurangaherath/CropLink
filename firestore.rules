rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSeller() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;

      // Cart subcollection
      match /cart/{itemId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Categories collection
    match /categories/{categoryId} {
      allow read: if true;  // Anyone can read categories
      allow create, update, delete: if isSeller();

      // Subcategories subcollection
      match /subcategories/{subcategoryId} {
        allow read: if true;
        allow create, update, delete: if isSeller();

        // Items subcollection
        match /items/{itemId} {
          allow read: if true;
          allow create: if isSeller() && 
                       request.resource.data.sellerUid == request.auth.uid;
          allow update, delete: if isSeller() && 
                               resource.data.sellerUid == request.auth.uid;

          // Ratings subcollection
          match /ratings/{ratingId} {
            allow read: if true;
            allow create: if request.auth != null;  // Authenticated users can rate
            allow update, delete: if request.auth != null && 
                                 resource.data.userId == request.auth.uid;
          }
        }
      }
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if request.auth != null && 
                 (resource.data.buyerId == request.auth.uid || 
                  resource.data.sellerId == request.auth.uid);
      allow create: if request.auth != null && 
                   request.resource.data.buyerId == request.auth.uid;
      allow update: if request.auth != null && 
                   ((resource.data.buyerId == request.auth.uid && 
                     request.resource.data.status in ['cancelled']) || 
                    (resource.data.sellerId == request.auth.uid && 
                     request.resource.data.status in ['accepted', 'shipped', 'delivered']));
    }

    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if request.auth != null && 
                 (resource.data.buyerId == request.auth.uid || 
                  resource.data.sellerId == request.auth.uid);
      allow create: if request.auth != null && 
                   request.resource.data.buyerId == request.auth.uid;
    }
  }
}